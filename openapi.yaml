# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: BinanceUser API
    version: 0.0.1
paths:
    /api/binanceexchange_user/admin_over_order_after_bind:
        get:
            tags:
                - BinanceUser
            operationId: BinanceUser_AdminOverOrderAfterBind
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/OverOrderAfterBindReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/binanceexchange_user/admin_over_order_after_bind_tfi:
        get:
            tags:
                - BinanceUser
            operationId: BinanceUser_AdminOverOrderAfterBindTwo
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/OverOrderAfterBindReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/binanceexchange_user/admin_over_order_two_by_info:
        get:
            tags:
                - BinanceUser
            operationId: BinanceUser_AdminOverOrderTwoByInfo
            parameters:
                - name: apiKey
                  in: query
                  schema:
                    type: string
                - name: apiSecret
                  in: query
                  schema:
                    type: string
                - name: symbol
                  in: query
                  schema:
                    type: string
                - name: num
                  in: query
                  schema:
                    type: number
                    format: double
                - name: positionSide
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AdminOverOrderTwoByInfoReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/binanceexchange_user/analyze:
        get:
            tags:
                - BinanceUser
            operationId: BinanceUser_Analyze
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AnalyzeReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/binanceexchange_user/bind_trader:
        get:
            tags:
                - BinanceUser
            operationId: BinanceUser_BindTrader
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BindTraderReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/binanceexchange_user/close_order_after_bind:
        get:
            tags:
                - BinanceUser
            operationId: BinanceUser_CloseOrderAfterBind
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CloseOrderAfterBindReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/binanceexchange_user/close_order_after_bind_tfi:
        get:
            tags:
                - BinanceUser
            operationId: BinanceUser_CloseOrderAfterBindTwo
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CloseOrderAfterBindReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/binanceexchange_user/delete_user_bind_data:
        post:
            tags:
                - BinanceUser
            operationId: BinanceUser_DeleteUserBindData
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DeleteUserBindDataRequest_SendBody'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteUserBindDataReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/binanceexchange_user/exchange_user_lever_age:
        get:
            tags:
                - BinanceUser
            operationId: BinanceUser_ExchangeUserLeverAge
            parameters:
                - name: userId
                  in: query
                  schema:
                    type: string
                - name: symbol
                  in: query
                  schema:
                    type: string
                - name: num
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ExchangeUserLeverAgeReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/binanceexchange_user/get_binance_trader_position_history:
        get:
            tags:
                - BinanceUser
            operationId: BinanceUser_GetBinanceTraderPosition
            parameters:
                - name: id
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetBinanceTraderPositionHistoryReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/binanceexchange_user/get_binance_traders_trader:
        get:
            tags:
                - BinanceUser
            operationId: BinanceUser_GetBinanceTradersTrade
            parameters:
                - name: traderNum
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetBinanceTradersTradeReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/binanceexchange_user/get_fil_data:
        get:
            tags:
                - BinanceUser
            operationId: BinanceUser_GetFilData
            parameters:
                - name: address
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetFilDataReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/binanceexchange_user/get_trader_positions:
        get:
            tags:
                - BinanceUser
            operationId: BinanceUser_GetTraderPosition
            parameters:
                - name: traderId
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetTraderPositionReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/binanceexchange_user/get_user:
        get:
            tags:
                - BinanceUser
            operationId: BinanceUser_GetUser
            parameters:
                - name: address
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetUserReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/binanceexchange_user/get_user_and_trader:
        get:
            tags:
                - BinanceUser
            operationId: BinanceUser_GetUserAndTrader
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetUserAndTraderReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/binanceexchange_user/get_user_bind_data:
        get:
            tags:
                - BinanceUser
            operationId: BinanceUser_GetUserBindData
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetUserBindDataReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/binanceexchange_user/get_user_positions:
        get:
            tags:
                - BinanceUser
            operationId: BinanceUser_GetUserPosition
            parameters:
                - name: userId
                  in: query
                  schema:
                    type: string
                - name: traderId
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetUserPositionReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/binanceexchange_user/handle_change:
        get:
            tags:
                - BinanceUser
            operationId: BinanceUser_HandleChange
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/OverOrderAfterBindReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/binanceexchange_user/handle_p:
        get:
            tags:
                - BinanceUser
            operationId: BinanceUser_HandleP
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HandlePReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/binanceexchange_user/init_order_after_bind:
        get:
            tags:
                - BinanceUser
            operationId: BinanceUser_InitOrderAfterBind
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InitOrderAfterBindReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/binanceexchange_user/init_order_after_bind_tfi:
        get:
            tags:
                - BinanceUser
            operationId: BinanceUser_InitOrderAfterBindTwo
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InitOrderAfterBindReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/binanceexchange_user/init_order_after_bind_tfi_new:
        get:
            tags:
                - BinanceUser
            operationId: BinanceUser_InitOrderAfterBindTwoNew
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InitOrderAfterBindReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/binanceexchange_user/init_positions:
        post:
            tags:
                - BinanceUser
            operationId: BinanceUser_InitPosition
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/InitPositionRequest_SendBody'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InitPositionReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/binanceexchange_user/insert_user_bind_data:
        post:
            tags:
                - BinanceUser
            operationId: BinanceUser_InsertUserBindData
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/InsertUserBindDataRequest_SendBody'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InsertUserBindDataReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/binanceexchange_user/listen_trader_and_user_order:
        post:
            tags:
                - BinanceUser
            operationId: BinanceUser_ListenTraderAndUserOrder
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ListenTraderAndUserOrderRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListenTraderAndUserOrderReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/binanceexchange_user/listen_trader_and_user_order_last:
        post:
            tags:
                - BinanceUser
            operationId: BinanceUser_ListenOrderNew
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ListenTraderAndUserOrderRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListenTraderAndUserOrderReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/binanceexchange_user/listen_trader_and_user_order_new:
        post:
            tags:
                - BinanceUser
            operationId: BinanceUser_ListenTraderAndUserOrderNew
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ListenTraderAndUserOrderRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListenTraderAndUserOrderReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/binanceexchange_user/listen_trader_position_send_email:
        get:
            tags:
                - BinanceUser
            operationId: BinanceUser_ListenTraderPositionSendEmail
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListenTraderPositionSendEmailReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/binanceexchange_user/open_positions:
        post:
            tags:
                - BinanceUser
            operationId: BinanceUser_OpenPosition
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/OpenPositionRequest_SendBody'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/OpenPositionReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/binanceexchange_user/order_admin_two:
        get:
            tags:
                - BinanceUser
            operationId: BinanceUser_OrderAdminTwo
            parameters:
                - name: userId
                  in: query
                  schema:
                    type: string
                - name: traderId
                  in: query
                  schema:
                    type: string
                - name: symbol
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/OrderAdminTwoReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/binanceexchange_user/order_handle:
        get:
            tags:
                - BinanceUser
            operationId: BinanceUser_OrderHandle
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/OrderHandleReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/binanceexchange_user/order_handle_two:
        get:
            tags:
                - BinanceUser
            operationId: BinanceUser_OrderHandleTwo
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/OrderHandleReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/binanceexchange_user/over_order_after_bind:
        get:
            tags:
                - BinanceUser
            operationId: BinanceUser_OverOrderAfterBind
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/OverOrderAfterBindReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/binanceexchange_user/over_order_after_bind_tfi:
        get:
            tags:
                - BinanceUser
            operationId: BinanceUser_OverOrderAfterBindTwo
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/OverOrderAfterBindReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/binanceexchange_user/pull_binance_trade_history:
        get:
            tags:
                - BinanceUser
            operationId: BinanceUser_PullBinanceTradeHistory
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PullBinanceTradeHistoryReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/binanceexchange_user/pull_fil_data:
        get:
            tags:
                - BinanceUser
            operationId: BinanceUser_PullFilData
            parameters:
                - name: address
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PullFilDataReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/binanceexchange_user/pull_trading_box_open:
        get:
            tags:
                - BinanceUser
            operationId: BinanceUser_PullTradingBoxOpen
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PullTradingBoxOpenReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/binanceexchange_user/pull_user_credentials_bsc:
        get:
            tags:
                - BinanceUser
            operationId: BinanceUser_PullUserCredentialsBsc
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PullUserCredentialsBscReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/binanceexchange_user/pull_user_deposit:
        get:
            tags:
                - BinanceUser
            operationId: BinanceUser_PullUserDeposit
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PullUserDepositReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/binanceexchange_user/pull_user_deposit_2:
        get:
            tags:
                - BinanceUser
            operationId: BinanceUser_PullUserDeposit2
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PullUserDepositReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/binanceexchange_user/settle_trading_box_open:
        get:
            tags:
                - BinanceUser
            operationId: BinanceUser_SettleTradingBoxOpen
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SettleTradingBoxOpenReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/binanceexchange_user/unbind_and_close_positions:
        post:
            tags:
                - BinanceUser
            operationId: BinanceUser_UnbindAndClosePosition
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UnbindAndClosePositionRequest_SendBody'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UnbindAndClosePositionReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/binanceexchange_user/user_order_do:
        get:
            tags:
                - BinanceUser
            operationId: BinanceUser_UserOrderDo
            parameters:
                - name: apiKey
                  in: query
                  schema:
                    type: string
                - name: apiSecret
                  in: query
                  schema:
                    type: string
                - name: apiKeyTwo
                  in: query
                  schema:
                    type: string
                - name: apiSecretTwo
                  in: query
                  schema:
                    type: string
                - name: amount
                  in: query
                  schema:
                    type: number
                    format: double
                - name: amountTwo
                  in: query
                  schema:
                    type: number
                    format: double
                - name: num
                  in: query
                  schema:
                    type: string
                - name: numTwo
                  in: query
                  schema:
                    type: string
                - name: symbol
                  in: query
                  schema:
                    type: string
                - name: symbolTwo
                  in: query
                  schema:
                    type: string
                - name: side
                  in: query
                  schema:
                    type: string
                - name: sideTwo
                  in: query
                  schema:
                    type: string
                - name: price
                  in: query
                  schema:
                    type: number
                    format: double
                - name: priceTwo
                  in: query
                  schema:
                    type: number
                    format: double
                - name: priceOpen
                  in: query
                  schema:
                    type: number
                    format: double
                - name: priceOpenTwo
                  in: query
                  schema:
                    type: number
                    format: double
                - name: redo
                  in: query
                  schema:
                    type: string
                - name: redoNum
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserOrderDoReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/binanceexchange_user/user_order_do_handel_price:
        get:
            tags:
                - BinanceUser
            operationId: BinanceUser_UserOrderDoHandlePrice
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserOrderDoHandlePriceReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/binanceexchange_user/user_order_do_two:
        get:
            tags:
                - BinanceUser
            operationId: BinanceUser_UserOrderDoTwo
            parameters:
                - name: apiKey
                  in: query
                  schema:
                    type: string
                - name: apiSecret
                  in: query
                  schema:
                    type: string
                - name: apiKeyTwo
                  in: query
                  schema:
                    type: string
                - name: apiSecretTwo
                  in: query
                  schema:
                    type: string
                - name: amount
                  in: query
                  schema:
                    type: number
                    format: double
                - name: amountTwo
                  in: query
                  schema:
                    type: number
                    format: double
                - name: num
                  in: query
                  schema:
                    type: string
                - name: numTwo
                  in: query
                  schema:
                    type: string
                - name: symbol
                  in: query
                  schema:
                    type: string
                - name: symbolTwo
                  in: query
                  schema:
                    type: string
                - name: side
                  in: query
                  schema:
                    type: string
                - name: sideTwo
                  in: query
                  schema:
                    type: string
                - name: price
                  in: query
                  schema:
                    type: number
                    format: double
                - name: priceTwo
                  in: query
                  schema:
                    type: number
                    format: double
                - name: priceOpen
                  in: query
                  schema:
                    type: number
                    format: double
                - name: priceOpenTwo
                  in: query
                  schema:
                    type: number
                    format: double
                - name: redo
                  in: query
                  schema:
                    type: string
                - name: redoNum
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserOrderDoReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
components:
    schemas:
        AdminOverOrderTwoByInfoReply:
            type: object
            properties: {}
        AnalyzeReply:
            type: object
            properties: {}
        BindTraderReply:
            type: object
            properties: {}
        CloseOrderAfterBindReply:
            type: object
            properties: {}
        DeleteUserBindDataReply:
            type: object
            properties:
                msg:
                    type: string
                res:
                    type: boolean
        DeleteUserBindDataRequest_SendBody:
            type: object
            properties:
                id:
                    type: string
        ExchangeUserLeverAgeReply:
            type: object
            properties: {}
        GetBinanceTraderPositionHistoryReply:
            type: object
            properties:
                positions:
                    type: array
                    items:
                        $ref: '#/components/schemas/GetBinanceTraderPositionHistoryReply_Position'
                winRate:
                    type: number
                    format: double
                winLostRate:
                    type: number
                    format: double
                revenueRate:
                    type: number
                    format: double
        GetBinanceTraderPositionHistoryReply_Position:
            type: object
            properties:
                symbol:
                    type: string
                side:
                    type: string
                closingPnl:
                    type: number
                    format: double
        GetBinanceTradersTradeReply:
            type: object
            properties:
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/GetBinanceTradersTradeReply_DataList'
        GetBinanceTradersTradeReply_DataList:
            type: object
            properties:
                time:
                    type: string
                createdAt:
                    type: string
                symbol:
                    type: string
                side:
                    type: string
                positionSide:
                    type: string
                qty:
                    type: number
                    format: double
        GetFilDataReply:
            type: object
            properties:
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/GetFilDataReply_DataList'
        GetFilDataReply_DataList:
            type: object
            properties:
                to:
                    type: string
                value:
                    type: string
                canGet:
                    type: string
                listChild:
                    type: array
                    items:
                        $ref: '#/components/schemas/GetFilDataReply_DataList'
                already:
                    type: boolean
        GetTraderPositionReply:
            type: object
            properties:
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/GetTraderPositionReply_DataList'
        GetTraderPositionReply_DataList:
            type: object
            properties:
                id:
                    type: string
                symbol:
                    type: string
                amount:
                    type: number
                    format: double
                positionSide:
                    type: string
        GetUserAndTraderReply:
            type: object
            properties:
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/GetUserAndTraderReply_DataList'
        GetUserAndTraderReply_DataBindTraderList:
            type: object
            properties:
                id:
                    type: string
                traderId:
                    type: string
                traderNum:
                    type: string
                traderName:
                    type: string
                initOrder:
                    type: string
                amount:
                    type: string
                status:
                    type: string
        GetUserAndTraderReply_DataList:
            type: object
            properties:
                userId:
                    type: string
                address:
                    type: string
                apiKey:
                    type: string
                apiSecret:
                    type: string
                apiStatus:
                    type: string
                traderList:
                    type: array
                    items:
                        $ref: '#/components/schemas/GetUserAndTraderReply_DataBindTraderList'
        GetUserBindDataReply:
            type: object
            properties:
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/GetUserBindDataReply_DataList'
        GetUserBindDataReply_DataList:
            type: object
            properties:
                id:
                    type: string
                userId:
                    type: string
                address:
                    type: string
                amount:
                    type: string
                traderNum:
                    type: string
                traderName:
                    type: string
        GetUserPositionReply:
            type: object
            properties:
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/GetUserPositionReply_DataList'
        GetUserPositionReply_DataList:
            type: object
            properties:
                symbol:
                    type: string
                amount:
                    type: number
                    format: double
                positionSide:
                    type: string
        GetUserReply:
            type: object
            properties:
                play:
                    type: string
                status:
                    type: string
                amount:
                    type: string
                balance:
                    type: string
                balanceTfi:
                    type: string
                amountTfi:
                    type: string
        GoogleProtobufAny:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        HandlePReply:
            type: object
            properties: {}
        InitOrderAfterBindReply:
            type: object
            properties: {}
        InitPositionReply:
            type: object
            properties:
                msg:
                    type: string
                res:
                    type: boolean
        InitPositionRequest_SendBody:
            type: object
            properties:
                userId:
                    type: string
                traderId:
                    type: string
        InsertUserBindDataReply:
            type: object
            properties:
                msg:
                    type: string
                res:
                    type: boolean
        InsertUserBindDataRequest_SendBody:
            type: object
            properties:
                userId:
                    type: string
                traderNum:
                    type: string
                amount:
                    type: string
                address:
                    type: string
        ListenTraderAndUserOrderReply:
            type: object
            properties:
                status:
                    type: string
        ListenTraderAndUserOrderRequest:
            type: object
            properties:
                sendBody:
                    $ref: '#/components/schemas/ListenTraderAndUserOrderRequest_SendBody'
        ListenTraderAndUserOrderRequest_SendBody:
            type: object
            properties:
                orders:
                    type: array
                    items:
                        $ref: '#/components/schemas/SendBody_Order'
                last:
                    type: string
                initOrder:
                    type: string
        ListenTraderPositionSendEmailReply:
            type: object
            properties: {}
        OpenPositionReply:
            type: object
            properties:
                msg:
                    type: string
                res:
                    type: boolean
        OpenPositionRequest_SendBody:
            type: object
            properties:
                bindId:
                    type: string
                positionId:
                    type: string
                amount:
                    type: number
                    format: double
                useSystemInit:
                    type: boolean
        OrderAdminTwoReply:
            type: object
            properties: {}
        OrderHandleReply:
            type: object
            properties: {}
        Order_Data:
            type: object
            properties:
                symbol:
                    type: string
                    description: Order 消息类型的字段
                type:
                    type: string
                price:
                    type: string
                side:
                    type: string
                qty:
                    type: string
                proportion:
                    type: string
                position:
                    type: string
        OverOrderAfterBindReply:
            type: object
            properties: {}
        PullBinanceTradeHistoryReply:
            type: object
            properties: {}
        PullFilDataReply:
            type: object
            properties: {}
        PullTradingBoxOpenReply:
            type: object
            properties: {}
        PullUserCredentialsBscReply:
            type: object
            properties: {}
        PullUserDepositReply:
            type: object
            properties: {}
        SendBody_Order:
            type: object
            properties:
                uid:
                    type: string
                baseMoney:
                    type: string
                data:
                    type: array
                    items:
                        $ref: '#/components/schemas/Order_Data'
                initOrder:
                    type: string
                rate:
                    type: string
                traderNum:
                    type: string
        SettleTradingBoxOpenReply:
            type: object
            properties: {}
        Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufAny'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
        UnbindAndClosePositionReply:
            type: object
            properties:
                msg:
                    type: string
                res:
                    type: boolean
        UnbindAndClosePositionRequest_SendBody:
            type: object
            properties:
                userId:
                    type: string
                traderId:
                    type: string
        UserOrderDoHandlePriceReply:
            type: object
            properties: {}
        UserOrderDoReply:
            type: object
            properties: {}
tags:
    - name: BinanceUser
